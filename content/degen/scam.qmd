# Don't lose your money

I'll be the first to admit that Web3 is full of sharks looking at newcomers like the chum you are. Before you even begin to tip your toes into this industry you need to be aware of the common pitfalls. Even after years of being in the industry, experienced degens can lose money to scams. If you want to make money and keep it, you need to be ever vigilant.

We break down the ways people can lose their money into the following categories:

* Private Key Management
* Technical User Errors
* Social Engineering and Scams
* Smart Contract Vulnerabilities and Hacks
* Rug Pulls and Exit Scams
* Market Manipulation
* Exchange and Platform Risks

## Private Key Management
A large part of the early vision of crypto was to create a currency with the absence of a central authority (read Government). Indeed the first Bitcoin block, mined by [Satoshi](../essentials/icons.qmd#satoshi-nakamoto) contained a message admonishing the banks. 

> The Times 03/Jan/2009 Chancellor on brink of second bailout for banks

In order to have a currency not controlled by a central authority, you need to be able to exchange value with others while not relying on the authority of governments. If I give you 10 digital dollars, what's to prevent you from saying you never received it? Who proves the exchange occured? This is where [Cryptography](../technical/cryptography.qmd) comes into it. We won't go into the technical details here, it's just important to note some general overview.

Your account/wallet on a blockchain is secured by a public-private key pair. You can think of the public key as akin to an email address and the private key as your password. Whenever you create a wallet and a [seed phrase](../essentials/terms.qmd#seed-phrases) is generated, what's essentially happening is a public-private key is being generated. 

Now whenever you interact with a blockchain, for example by sending someone some digital coins, you need to sign that transaction. What you're doing is essentially using your private key to sign that you do want to perform that transaction.

This is why keeping your private key safe is the most important thing you can do in Web3. Since we have no trusted authority, we can only rely on ourselves in this decentralized environment. If someone got access to your private key, they would be able to do anything with the assets that are owned by your account. 

The below are the ways you can store your private key or seed phrases:

* Cold Storage
* Paper and Metal Storage
* Multiple Physical Locations
* Multisignature Wallets
* Glacier Protocol

For newcomers, we recommend cold storage via using a Hardware wallet. However this is impractical for a few reasons:

* Costs can be prohibitive 
* UX when interacting on chain is cumbersome

For this reason we recommend using [Passkeys](../technical/cryptography.qmd#passkeys) however this is only beginning to see adoption in Web3 and is not quite ready for mass adoption at this stage. Please see [creating your first crypto wallet](../degen/starter.qmd#creating-your-first-crypto-wallet) for the latest recommendation.

## Technical Errors

* Network selection error. If you send money to someone on a different network there is no guarantee the address will be the same
* Gas Fee misunderstandings
* Token Approval Dangers - never set max limits. Would be good to break down these risks by Application Model.
* Smart Contract Interaction Errors - Some UI's may not be linked to the actual smart contract you're looking for
* Impermanent Loss
* Wallet Address Verification
* Slippage and Frontrunning
* Sniping - new token launchs


### Gas Fee misunderstandings
To be truly proficient with Gas you should understand deeply how [Fee Markets](../technical/blockchains.qmd#fee-markets) work.

Else this could be you...

::: {.callout-note}
<blockquote class="twitter-tweet">
<a href="https://twitter.com/binance/status/1322508812738269186"></a>
</blockquote>
:::

::: {.callout-note}
<blockquote class="twitter-tweet">
<a href="https://twitter.com/ChemistDeFi/status/1757692072536981909"></a>
</blockquote>
:::


### Impermanent Loss {#IL}
**Spoiler alert** It's probably permanent

![Chart showing Impermanent Loss](../../images/defi/il.svg)

::: {.callout-note}
<blockquote class="twitter-tweet">
<a href="https://twitter.com/DeathByFiat/status/1313222952763170817"></a>
</blockquote>
:::

### Wallet Address Verification
This is one of the reasons [Name Services](../technical/dapps.qmd#name-services) have gained popularity. Although they do remove a further layer of anonymity if you're not careful.

## Social Engineering Scams

* OneCoin. Ruja Ignatova (the "CryptoQueen") got away with $4 billion. 

Common threads of social engineering scams

* Authority Exploitation
* Emotional Manipulation
* Technical Obscurity
* Community Building
* Urgency Creation

**Authority Exploitation**
While no mean authoritive, these are some of the biggest dodgy celebrities:

* Kim Kardashian
* Floyd Mayweather
* DJ Khaled
* Ben Phillips
* Lindsay Lohan
* Steven Seagal
* Paul Pierce
* Logan and Jake Paul

### Network addresses
Scammers put in fake networks. Use [Chainlist](https://chainlist.org/)

## Smart Contract Vulnerabilities and Hacks

Smart contract vulnerabilities represent one of the most critical risks in Web3, having led to billions in losses. This analysis examines major exploit categories based on historical hacks, their prevalence across different application models, and effective mitigation strategies.

* Access Control Flaws
* Logic and Arithmetic Errors
* Oracle Manipulation
* Reentrancy attacks
* Flash Loan Vulnerabilities
* Reentrancy attacks